name: .NET CI/CD with Veracode Scanning

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build with publish
      run: |
        # Buscar el primer archivo .csproj
        csproj_file=$(find . -name "*.csproj" -print -quit)
        if [ -z "$csproj_file" ]; then
          echo "::error::No .csproj file found"
          exit 1
        fi
        
        # Publicar la aplicación
        dotnet publish "$csproj_file" -c Release -o ./veracode-upload --no-self-contained
        
        # Verificar los archivos generados
        echo "Generated files:"
        ls -R ./veracode-upload
        
    - name: Prepare Veracode Scan
      id: prepare-scan
      run: |
        # Encontrar todos los archivos ejecutables
        echo "Files to be scanned:"
        find ./veracode-upload -type f \( -name "*.dll" -o -name "*.exe" \) -print
        
        # Contar archivos para verificación
        FILE_COUNT=$(find ./veracode-upload -type f \( -name "*.dll" -o -name "*.exe" \) | wc -l)
        echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT
        if [ "$FILE_COUNT" -eq 0 ]; then
          echo "::error::No DLL/EXE files found for scanning"
          exit 1
        fi

    - name: Veracode Upload And Scan
      uses: veracode/veracode-uploadandscan-action@0.2.6
      with:
        appname: "verademo-net4"
        version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
        vid: ${{ secrets.VERACODE_API_ID }}
        vkey: ${{ secrets.VERACODE_API_KEY }}
        filepath: ./veracode-upload
        include: "*.dll,*.exe"
        scanallnonfataltoplevelmodules: true
        toplevel: true
        deleteincompletescan: true
        debug: true
      continue-on-error: true

    - name: Continue Pipeline
      run: echo "El escaneo de Veracode se inició en segundo plano, continuando con el pipeline..."
        
